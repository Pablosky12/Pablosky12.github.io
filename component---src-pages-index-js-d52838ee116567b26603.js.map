{"version":3,"sources":["webpack://portfolio/./src/images/comingsoon.svg","webpack://portfolio/./src/pages/index.js"],"names":["projects","name","image","isComingSoon","articles","Projects","source","ProjectsContainer","map","p","i","ComingSoon","img","comingSoon","src","alt","ProjectCard","styled","theme","textContrast","contrast1","contrast2","contrast3","Section","textSecondary","Divider","text","Headshot","PresentationCard","Main","Layout","Header","headBw","className","href"],"mappings":"gMAAA,EAAe,IAA0B,yD,UCuCnCA,EAAW,CACf,CACEC,KAAM,aACNC,MAAO,0CAET,CACEC,cAAc,GAEhB,CACEA,cAAc,GAEhB,CACEA,cAAc,IAIZC,EAAW,CACf,CACED,cAAc,GAEhB,CACEA,cAAc,GAEhB,CACEA,cAAc,IAIlB,SAASE,EAAT,GAA6B,IAAVC,EAAS,EAATA,OACjB,OACE,gBAACC,EAAD,KACGD,EAAOE,KAAI,SAACC,EAAGC,GACd,OAAID,EAAEN,aAEF,gBAACQ,EAAD,CAAYD,EAAGA,EAAGE,IAAKC,GACrB,uBAAKC,IAAKD,EAAaE,IAAI,qBAD7B,eAOF,gBAACC,EAAD,CAAaN,EAAGA,GACd,0BAAKD,EAAER,MACP,uBAAKa,IAAKL,EAAEP,MAAOa,IAAG,yBAA2BN,EAAER,YAQ/D,IAAMU,EAAaM,mBAAH,6DAAGA,CAAH,oNAKN,sBAAmB,GAAnB,EAAGP,EAAH,QAIC,qBAAGQ,MAAkBC,gBAS1BZ,EAAoBU,mBAAH,oEAAGA,CAAH,wQAYG,qBAAGC,MAAkBE,aAGrB,qBAAGF,MAAkBG,aAGrB,qBAAGH,MAAkBI,aAIzCN,EAAcC,mBAAH,8DAAGA,CAAH,yNAIN,qBAAGC,MAAkBC,gBAEtB,sBAAmB,GAAnB,EAAGT,EAAH,QAcJa,EAAUN,wBAAH,0DAAGA,CAAH,uDAIA,qBAAGC,MAAkBM,iBAM5BC,EAAUR,oBAAH,0DAAGA,CAAH,6HAOA,qBAAGC,MAAkBQ,QAK5BC,EAAWV,oBAAH,2DAAGA,CAAH,8EAMRW,EAAmBX,oBAAH,mEAAGA,CAAH,mKAQT,qBAAGC,MAAkBQ,QAGrB,qBAAGR,MAAkBM,iBAS5BK,EAAOZ,qBAAH,uDAAGA,CAAH,qBAIV,EAnMkB,WAChB,OACE,gBAACa,EAAA,EAAD,KACE,gBAACD,EAAD,KACE,gBAACE,EAAA,EAAD,aACO,6CADP,uBACmD,qCAAiB,IADpE,4BAIA,gBAACH,EAAD,KACE,gBAACD,EAAD,CAAUb,IAAKkB,IAAQjB,IAAI,2BAC3B,2BACE,qBAAGkB,UAAU,QAAb,iBACA,qBAAGA,UAAU,QAAb,gCACA,qBAAGA,UAAU,QAAb,kCAIN,gBAACR,EAAD,KACE,qBAAGS,KAAK,SAAR,gBAEF,gBAACX,EAAD,CAASW,KAAK,SACZ,sCACA,gBAAC7B,EAAD,CAAUC,OAAQN,KAEpB,gBAACuB,EAAD,KACE,6CACA,gBAAClB,EAAD,CAAUC,OAAQF","file":"component---src-pages-index-js-d52838ee116567b26603.js","sourcesContent":["export default __webpack_public_path__ + \"static/comingsoon-20a31bdd0008e17259c27012e77dbc89.svg\";","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../components/Layout\";\nimport headBw from \"../images/me-bw.jpg\";\nimport comingSoon from \"../images/comingsoon.svg\";\nimport { Header } from \"../components/Header\";\n// markup\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Main>\n        <Header>\n          I'm a<em> Web developer </em> who loves to build <em>quality</em>{\" \"}\n          products with cool tech.\n        </Header>\n        <PresentationCard>\n          <Headshot src={headBw} alt=\"Pablo Marcano headshot\" />\n          <div>\n            <p className=\"name\">Pablo Marcano</p>\n            <p className=\"desc\">Montevideo, Uruguay + Remote</p>\n            <p className=\"desc\">Available for Contract Work</p>\n          </div>\n        </PresentationCard>\n      </Main>\n      <Divider>\n        <a href=\"#work\">See work â–¼ </a>\n      </Divider>\n      <Section href=\"#work\">\n        <h3>Showcase</h3>\n        <Projects source={projects}/>\n      </Section>\n      <Section>\n        <h3>Latest Articles</h3>\n        <Projects source={articles}/>\n      </Section>\n    </Layout>\n  );\n};\n\nconst projects = [\n  {\n    name: \"This Site!\",\n    image: \"https://source.unsplash.com/random/800\",\n  },\n  {\n    isComingSoon: true,\n  },\n  {\n    isComingSoon: true,\n  },\n  {\n    isComingSoon: true,\n  },\n];\n\nconst articles = [\n  {\n    isComingSoon: true,\n  },\n  {\n    isComingSoon: true,\n  },\n  {\n    isComingSoon: true,\n  },\n];\n\nfunction Projects({source}) {\n  return (\n    <ProjectsContainer>\n      {source.map((p, i) => {\n        if (p.isComingSoon) {\n          return (\n            <ComingSoon i={i} img={comingSoon}>\n              <img src={comingSoon}  alt=\"Coming Soon text\"/>\n              Coming Soon\n            </ComingSoon>\n          );\n        }\n        return (\n          <ProjectCard i={i}>\n            <h4>{p.name}</h4>\n            <img src={p.image} alt={`Screenshot of project ${p.name}`} />\n          </ProjectCard>\n        );\n      })}\n    </ProjectsContainer>\n  );\n}\n\nconst ComingSoon = styled.li`\n  min-width: 30vh;\n  min-height: 30vh;\n  border-radius: 1000px;\n  position: relative;\n  left: ${({ i }) => `-${i * 60}px`};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.textContrast};\n  font-size: 1.5em;\n  img {\n    width: 30vh;\n    height: 30vh;\n    position: absolute;\n  }\n`;\n\nconst ProjectsContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  padding-bottom: 10%;\n  overflow: hidden;\n  li {\n    &:nth-child(even) {\n      top: 6vh;\n    }\n    &:nth-child(3n + 1) {\n      background-color: ${({ theme }) => theme.contrast1};\n    }\n    &:nth-child(3n + 2) {\n      background-color: ${({ theme }) => theme.contrast2};\n    }\n    &:nth-child(3n + 3) {\n      background-color: ${({ theme }) => theme.contrast3};\n    }\n  }\n`;\nconst ProjectCard = styled.li`\n  min-width: 30vh;\n  min-height: 30vh;\n  padding: 1em;\n  color: ${({ theme }) => theme.textContrast};\n  position: relative;\n  left: ${({ i }) => `-${i * 60}px`};\n  img {\n    width: 70%;\n    height: 70%;\n    margin: 0;\n    object-fit: cover;\n    object-position: 30% 50%;\n    border-radius: 800px;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nconst Section = styled.section`\n  padding-bottom: 3em;\n  h3 {\n    padding-top: 2em;\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\n\n\n\nconst Divider = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1em 0;\n  a {\n    color: ${({ theme }) => theme.text};\n    text-decoration: underline;\n  }\n`;\n\nconst Headshot = styled.img`\n  width: 130px;\n  transform: translateY(0.5em);\n  border-radius: 100px;\n  padding: 1em;\n`;\nconst PresentationCard = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 0.8em;\n  p {\n    margin: 0;\n  }\n  .name {\n    color: ${({ theme }) => theme.text};\n  }\n  .desc {\n    color: ${({ theme }) => theme.textSecondary};\n    opacity: 0.8;\n  }\n\n  @media (min-width: 768px) {\n    max-width: max(30%, 500px);\n  }\n`;\n\nconst Main = styled.main`\n  margin-top: 1em;\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}